// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include "../inst/include/rvfc.h"
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compare
std::vector<int> compare(XPtrMat x, XPtrMat y);
RcppExport SEXP _rvfc_compare(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type x(xSEXP);
    Rcpp::traits::input_parameter< XPtrMat >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(compare(x, y));
    return rcpp_result_gen;
END_RCPP
}
// mask
XPtrMat mask(XPtrMat x, XPtrMat y);
RcppExport SEXP _rvfc_mask(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< XPtrMat >::type x(xSEXP);
    Rcpp::traits::input_parameter< XPtrMat >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(mask(x, y));
    return rcpp_result_gen;
END_RCPP
}
// version
int version();
RcppExport SEXP _rvfc_version() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(version());
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rvfc_compare", (DL_FUNC) &_rvfc_compare, 2},
    {"_rvfc_mask", (DL_FUNC) &_rvfc_mask, 2},
    {"_rvfc_version", (DL_FUNC) &_rvfc_version, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_rvfc(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
